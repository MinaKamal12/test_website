name: CI/CD Pipeline for test_website
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # -------------------------------
  # 1Ô∏è‚É£ Build & Deploy Stage
  # -------------------------------
  build-and-deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'  # Only run on main branch pushes

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # --- Python sanity check ---
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flask flask-cors
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          echo "‚úÖ Flask dependencies installed successfully."

      - name: Syntax check (optional safety)
        run: |
          python -m compileall .
          echo "‚úÖ Python syntax OK."

      # --- Docker setup ---
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: minakmorgan/ftest_website:latest

      # --- Deploy to EC2 ---
      - name: Deploy to AWS EC2 via SSH
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.AWS_EC2_SSH_KEY }}
          port: 22
          script: |
            echo "üîπ Pulling latest Docker image..."
            docker pull minakmorgan/test_website:latest

            echo "üîπ Stopping old container if exists..."
            docker stop test_website || true
            docker rm test_website || true

            echo "üîπ Running new container..."
            docker run -d --name test_website -p 80:5000 minakmorgan/test_website:latest

            echo "‚úÖ Deployment complete! Your Flask app is live."
